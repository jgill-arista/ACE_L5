import yaml
from cvplibrary import CVPGlobalVariables, GlobalVariableNames

hostname = CVPGlobalVariables.getValue(GlobalVariableNames.CVP_SERIAL)

config = """
#DC1
spine1-DC1:
  interfaces:
    loopback0:
      ipv4: 192.168.101.101
      mask: 32
    Ethernet2:
      ipv4: 192.168.103.1
      mask: 31
    Ethernet3:
      ipv4: 192.168.103.7
      mask: 31
    Ethernet4:
      ipv4: 192.168.103.13
      mask: 31
    Ethernet5:
      ipv4: 192.168.103.19
      mask: 31
    Ethernet6:
      ipv4: 192.168.103.25
      mask: 31
    Ethernet7:
      ipv4: 192.168.103.31
      mask: 31
  ASN: 65100
spine2-DC1:
  interfaces:
    loopback0:
      ipv4: 192.168.101.102
      mask: 32
    Ethernet2:
      ipv4: 192.168.103.3
      mask: 31
    Ethernet3:
      ipv4: 192.168.103.9
      mask: 31
    Ethernet4:
      ipv4: 192.168.103.15
      mask: 31
    Ethernet5:
      ipv4: 192.168.103.21
      mask: 31
    Ethernet6:
      ipv4: 192.168.103.27
      mask: 31
    Ethernet7:
      ipv4: 192.168.103.33
      mask: 31
  ASN: 65100
spine3-DC1:
  interfaces:
    loopback0:
      ipv4: 192.168.101.103
      mask: 32
    Ethernet2:
      ipv4: 192.168.103.5
      mask: 31
    Ethernet3:
      ipv4: 192.168.103.11
      mask: 31
    Ethernet4:
      ipv4: 192.168.103.17
      mask: 31
    Ethernet5:
      ipv4: 192.168.103.23
      mask: 31
    Ethernet6:
      ipv4: 192.168.103.29
      mask: 31
    Ethernet7:
      ipv4: 192.168.103.35
      mask: 31
  ASN: 65100
leaf1-DC1:
  interfaces:
    loopback0: 
      ipv4: 192.168.101.11
      mask: 32
    loopback1: 
      ipv4: 192.168.102.11
      mask: 32
    Ethernet3:
      ipv4: 192.168.103.0
      mask: 31
    Ethernet4: 
      ipv4: 192.168.103.2
      mask: 31
    Ethernet5: 
      ipv4: 192.168.103.4
      mask: 31
  ASN: 65101
  spine-peers:
    spine1:
      ipv4: 192.168.103.1
    spine2:
      ipv4: 192.168.103.3
    spine3:
      ipv4: 192.168.103.5
  leaf-peers:
    - "192.168.255.2"
leaf2-DC1:
  interfaces:
    loopback0: 
      ipv4: 192.168.101.12
      mask: 32
    loopback1: 
      ipv4: 192.168.102.12
      mask: 32
    Ethernet3:
      ipv4: 192.168.103.6
      mask: 31
    Ethernet4: 
      ipv4: 192.168.103.8
      mask: 31
    Ethernet5: 
      ipv4: 192.168.103.10
      mask: 31
  ASN: 65101
  spine-peers:
    spine1:
      ipv4: 192.168.103.7
    spine2:
      ipv4: 192.168.103.9
    spine3:
      ipv4: 192.168.103.11
  leaf-peers:
    - "192.168.255.1"
leaf3-DC1:
  interfaces:
    loopback0: 
      ipv4: 192.168.101.13
      mask: 32
    loopback1: 
      ipv4: 192.168.102.13
      mask: 32
    Ethernet3:
      ipv4: 192.168.103.12
      mask: 31
    Ethernet4: 
      ipv4: 192.168.103.14
      mask: 31
    Ethernet5: 
      ipv4: 192.168.103.16
      mask: 31
  ASN: 65102
  spine-peers:
    spine1:
      ipv4: 192.168.103.13
    spine2:
      ipv4: 192.168.103.15
    spine3:
      ipv4: 192.168.103.17
  leaf-peers:
    - "192.168.255.2"
leaf4-DC1:
  interfaces:
    loopback0: 
      ipv4: 192.168.101.14
      mask: 32
    loopback1: 
      ipv4: 192.168.102.14
      mask: 32
    Ethernet3:
      ipv4: 192.168.103.18
      mask: 31
    Ethernet4: 
      ipv4: 192.168.103.20
      mask: 31
    Ethernet5: 
      ipv4: 192.168.103.22
      mask: 31
  ASN: 65102
  spine-peers:
    spine1:
      ipv4: 192.168.103.19
    spine2:
      ipv4: 192.168.103.21
    spine3:
      ipv4: 192.168.103.23
  leaf-peers:
    - "192.168.255.1"
borderleaf1-DC1:
  interfaces:
    loopback0: 
      ipv4: 192.168.101.21
      mask: 32
    loopback1: 
      ipv4: 192.168.102.21
      mask: 32
    Ethernet3:
      ipv4: 192.168.103.24
      mask: 31
    Ethernet4: 
      ipv4: 192.168.103.26
      mask: 31
    Ethernet5: 
      ipv4: 192.168.103.28
      mask: 31
    Ethernet12:
      ipv4: 192.168.254.0
      mask: 31
  ASN: 65103
  spine-peers:
    spine1:
      ipv4: 192.168.103.25
    spine2:
      ipv4: 192.168.103.27
    spine3:
      ipv4: 192.168.103.29
  leaf-peers:
    - "192.168.255.2"
borderleaf2-DC1:
  interfaces:
    loopback0: 
      ipv4: 192.168.101.22
      mask: 32
    loopback1: 
      ipv4: 192.168.102.22
      mask: 32
    Ethernet3:
      ipv4: 192.168.103.30
      mask: 31
    Ethernet4: 
      ipv4: 192.168.103.32
      mask: 31
    Ethernet5: 
      ipv4: 192.168.103.34
      mask: 31
    Ethernet12:
      ipv4: 192.168.254.2
      mask: 31
  ASN: 65103
  spine-peers:
    spine1:
      ipv4: 192.168.103.31
    spine2:
      ipv4: 192.168.103.33
    spine3:
      ipv4: 192.168.103.35
  leaf-peers:
    - "192.168.255.1"

#DC2

spine1-DC2:
  interfaces:
    loopback0:
      ipv4: 192.168.201.101
      mask: 32
    Ethernet2:
      ipv4: 192.168.203.1
      mask: 31
    Ethernet3:
      ipv4: 192.168.203.7
      mask: 31
    Ethernet4:
      ipv4: 192.168.203.13
      mask: 31
    Ethernet5:
      ipv4: 192.168.203.19
      mask: 31
    Ethernet6:
      ipv4: 192.168.203.25
      mask: 31
    Ethernet7:
      ipv4: 192.168.203.31
      mask: 31
  ASN: 65200
spine2-DC2:
  interfaces:
    loopback0:
      ipv4: 192.168.201.102
      mask: 32
    Ethernet2:
      ipv4: 192.168.203.3
      mask: 31
    Ethernet3:
      ipv4: 192.168.203.9
      mask: 31
    Ethernet4:
      ipv4: 192.168.203.15
      mask: 31
    Ethernet5:
      ipv4: 192.168.203.21
      mask: 31
    Ethernet6:
      ipv4: 192.168.203.27
      mask: 31
    Ethernet7:
      ipv4: 192.168.203.33
      mask: 31
  ASN: 65200
spine3-DC2:
  interfaces:
    loopback0:
      ipv4: 192.168.201.103
      mask: 32
    Ethernet2:
      ipv4: 192.168.203.5
      mask: 31
    Ethernet3:
      ipv4: 192.168.203.11
      mask: 31
    Ethernet4:
      ipv4: 192.168.203.17
      mask: 31
    Ethernet5:
      ipv4: 192.168.203.23
      mask: 31
    Ethernet6:
      ipv4: 192.168.203.29
      mask: 31
    Ethernet7:
      ipv4: 192.168.203.35
      mask: 31
  ASN: 65200
leaf1-DC2:
  interfaces:
    loopback0: 
      ipv4: 192.168.201.11
      mask: 32
    loopback1: 
      ipv4: 192.168.202.11
      mask: 32
    Ethernet3:
      ipv4: 192.168.203.0
      mask: 31
    Ethernet4: 
      ipv4: 192.168.203.2
      mask: 31
    Ethernet5: 
      ipv4: 192.168.203.4
      mask: 31
  ASN: 65201
  spine-peers:
    spine1:
      ipv4: 192.168.203.1
    spine2:
      ipv4: 192.168.203.3
    spine3:
      ipv4: 192.168.203.5
  leaf-peers:
    - "192.168.255.2"
leaf2-DC2:
  interfaces:
    loopback0: 
      ipv4: 192.168.201.12
      mask: 32
    loopback1: 
      ipv4: 192.168.202.12
      mask: 32
    Ethernet3:
      ipv4: 192.168.203.6
      mask: 31
    Ethernet4: 
      ipv4: 192.168.203.8
      mask: 31
    Ethernet5: 
      ipv4: 192.168.203.10
      mask: 31
  ASN: 65201
  spine-peers:
    spine1:
      ipv4: 192.168.203.7
    spine2:
      ipv4: 192.168.203.9
    spine3:
      ipv4: 192.168.203.11
  leaf-peers:
    - "192.168.255.1"
leaf3-DC2:
  interfaces:
    loopback0: 
      ipv4: 192.168.201.13
      mask: 32
    loopback1: 
      ipv4: 192.168.202.13
      mask: 32
    Ethernet3:
      ipv4: 192.168.203.12
      mask: 31
    Ethernet4: 
      ipv4: 192.168.203.14
      mask: 31
    Ethernet5: 
      ipv4: 192.168.203.16
      mask: 31
  ASN: 65202
  spine-peers:
    spine1:
      ipv4: 192.168.203.13
    spine2:
      ipv4: 192.168.203.15
    spine3:
      ipv4: 192.168.203.17
  leaf-peers:
    - "192.168.255.2"
leaf4-DC2:
  interfaces:
    loopback0: 
      ipv4: 192.168.201.14
      mask: 32
    loopback1: 
      ipv4: 192.168.202.14
      mask: 32
    Ethernet3:
      ipv4: 192.168.203.18
      mask: 31
    Ethernet4: 
      ipv4: 192.168.203.20
      mask: 31
    Ethernet5: 
      ipv4: 192.168.203.22
      mask: 31
  ASN: 65202
  spine-peers:
    spine1:
      ipv4: 192.168.203.19
    spine2:
      ipv4: 192.168.203.21
    spine3:
      ipv4: 192.168.203.23
  leaf-peers:
    - "192.168.255.1"
borderleaf1-DC2:
  interfaces:
    loopback0: 
      ipv4: 192.168.201.21
      mask: 32
    loopback1: 
      ipv4: 192.168.202.21
      mask: 32
    Ethernet3:
      ipv4: 192.168.203.24
      mask: 31
    Ethernet4: 
      ipv4: 192.168.203.26
      mask: 31
    Ethernet5: 
      ipv4: 192.168.203.28
      mask: 31
    Ethernet12:
      ipv4: 192.168.254.4
      mask: 31
  ASN: 65203
  spine-peers:
    spine1:
      ipv4: 192.168.203.25
    spine2:
      ipv4: 192.168.203.27
    spine3:
      ipv4: 192.168.203.29
  leaf-peers:
    - "192.168.255.2"
borderleaf2-DC2:
  interfaces:
    loopback0: 
      ipv4: 192.168.201.22
      mask: 32
    loopback1: 
      ipv4: 192.168.202.22
      mask: 32
    Ethernet3:
      ipv4: 192.168.203.30
      mask: 31
    Ethernet4: 
      ipv4: 192.168.203.32
      mask: 31
    Ethernet5: 
      ipv4: 192.168.203.34
      mask: 31
    Ethernet12:
      ipv4: 192.168.254.6
      mask: 31
  ASN: 65203
  spine-peers:
    spine1:
      ipv4: 192.168.203.31
    spine2:
      ipv4: 192.168.203.33
    spine3:
      ipv4: 192.168.203.35
  leaf-peers:
    - "192.168.255.1"
"""

#switches = yaml.load(config)
#validDevice = True
 
switches = yaml.load(config)
if hostname in switches:
  validDevice = True
else:
  validDevice = False
  print('! empty configuration generated by CVP configlet builder: eBGP-Underlay-Builder')

if validDevice:
  print('service routing protocols model multi-agent')
  print('')
  for iface in switches[hostname]['interfaces']:
#Iterate through all interfaces using iface variable as the incrementing index
    print("interface %s") % iface
#Pull variables into easier to use variables
    ip = switches[hostname]['interfaces'][iface]['ipv4']
    mask = switches[hostname]['interfaces'][iface]['mask']
    print(" ip address %s/%s") % (ip, mask)
#Check if the interface name contains "Ethernet", as it will need "no switchport"
    if "Ethernet" in iface:
      print " no switchport"
      print " mtu 9214"

#BGP configuration

#Check for leaf or spine here based on switches[hostname] containing leaf or spine
  if 'leaf' in hostname:
    leafOrSpine = 'leaf'
  elif 'spine' in hostname:
    leafOrSpine = 'spine'
  else:
    leafOrSpine = 'neither'

#Check for DC1 or DC2 based on switches[hostname] containing DC1 or DC2
  if 'DC1' in hostname:
    dcNum = '1'
    spineAS = '65100' 
  elif 'DC2' in hostname:
    dcNum = '2'
    spineAS = '65200'
  else:
    dcNum = 'neither'
    spineAS = None
  print('')

  print('ip prefix-list PL-LOOPBACK')
  print('   seq 10 permit 192.168.101.0/24 eq 32')
  print('   seq 20 permit 192.168.102.0/24 eq 32')
  print('   seq 30 permit 192.168.201.0/24 eq 32')
  print('   seq 40 permit 192.168.202.0/24 eq 32')
  print('route-map RM-LOOPBACK permit 10')
  print('   match ip address prefix-list PL-LOOPBACK')
  print('')

  if leafOrSpine == 'spine':
    print('peer-filter PF-LEAF-AS-RANGE')
    print('   10 match as-range 65000-65535 result accept')
    print('')

  print('router bgp %s' % switches[hostname]['ASN'])
  print('  router-id %s' % switches[hostname]['interfaces']['loopback0']['ipv4'])
  print('  no bgp default ipv4-unicast')
  print('  maximum-paths 3')
  print('  distance bgp 20 200 200')

  if leafOrSpine == 'spine':
    print('   bgp listen range 192.168.0.0/16 peer-group LEAF_Underlay peer-filter PF-LEAF-AS-RANGE')
    print('   neighbor LEAF_Underlay peer group')
    print('   neighbor LEAF_Underlay send-community')
    print('   neighbor LEAF_Underlay maximum-routes 12000')


  if leafOrSpine == 'leaf':
    print('   neighbor SPINE_Underlay peer group')
    print('   neighbor SPINE_Underlay remote-as %s' % spineAS)
    print('   neighbor SPINE_Underlay send-community')
    print('   neighbor SPINE_Underlay maximum-routes 12000')
    print('   neighbor LEAF_Peer peer group')
    print('   neighbor LEAF_Peer remote-as %s' % switches[hostname]['ASN'])
    print('   neighbor LEAF_Peer next-hop-self')
    print('   neighbor LEAF_Peer maximum-routes 12000')
    print('   neighbor %s peer group LEAF_Peer' % switches[hostname]['leaf-peers'][0])
    for spineNum in switches[hostname]['spine-peers']:
      print('   neighbor %s peer group SPINE_Underlay' % switches[hostname]['spine-peers'][spineNum]['ipv4'])
    
  print('   redistribute connected route-map LOOPBACK')
  print('   address-family ipv4')

  if leafOrSpine == 'spine':
    print('   neighbor LEAF_Underlay activate')
  if leafOrSpine == 'leaf':
    print('   neighbor SPINE_Underlay activate')
    print('   neighbor LEAF_Peer activate')